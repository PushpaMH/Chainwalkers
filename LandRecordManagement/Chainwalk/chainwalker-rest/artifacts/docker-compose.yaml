version: '2'

services:

  # couchdb0:
  #   container_name: couchdb0
  #   image: hyperledger/fabric-couchdb
  #   # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
  #   # for example map it to utilize Fauxton User Interface in dev environments.
  #   ports:
  #     - "5984:5984"

  ccenv:
    image: hyperledger/fabric-ccenv:x86_64-1.0.0-beta
    container_name: ccenv

  ca0:
    image: hyperledger/fabric-ca:x86_64-1.0.0-beta
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.peerOrg1-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/3decc76546be57b62f558527b854819c52e637335f7241eb5d2a2f3302307004_sk -b admin:adminpw' -d
    volumes:
      - ./crypto-config/peerOrganizations/peerOrg1/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg1

  ca1:
    image: hyperledger/fabric-ca:x86_64-1.0.0-beta
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org2
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.peerOrg2-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/b4a806fbb8ea8b873aae7ebb71a456adc447735efe20c9930a43c0d7e51ad007_sk -b admin:adminpw' -d
    volumes:
      - ./crypto-config/peerOrganizations/peerOrg2/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg2

  orderer.ordererOrg1:
    container_name: orderer.ordererOrg1
    image: hyperledger/fabric-orderer:x86_64-1.0.0-beta
    environment:
      - GRPC_TRACE=all
      - GRPC_VERBOSITY=debug
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./channel:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/ordererOrg1/orderers/orderer.ordererOrg1/:/etc/hyperledger/crypto/orderer

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:x86_64-1.0.0-beta
    ports:
      - 5984:5984

  peer0Org1:
    container_name: peer0Org1
    image: hyperledger/fabric-peer:x86_64-1.0.0-beta
    environment:
      # - GOPATH=/opt/gopath
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      - CORE_LOGGING_LEVEL=ERROR
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0Org1
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_ADDRESS=peer0Org1:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0Org1:7051
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=false
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/peerOrg1/peers/peer0.peerOrg1/msp:/etc/hyperledger/crypto/peer
        # - ../chainwalker/go/src/github.com/pmechainwalk:/opt/gopath/src/github.com/pmechainwalk
    depends_on:
      - orderer.ordererOrg1
      - couchdb0

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:x86_64-1.0.0-beta
    ports:
      - 6984:5984

  peer1Org1:
    container_name: peer1Org1
    image: hyperledger/fabric-peer:x86_64-1.0.0-beta
    environment:
      # - GOPATH=/opt/gopath
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      - CORE_LOGGING_LEVEL=ERROR
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1Org1
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_ADDRESS=peer1Org1:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1Org1:7051
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=false
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 7056:7051
      - 7058:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/peerOrg1/peers/peer1.peerOrg1/msp:/etc/hyperledger/crypto/peer
        # - ../chainwalker/go/src/github.com/pmechainwalk:/opt/gopath/src/github.com/pmechainwalk
    depends_on:
      - orderer.ordererOrg1
      - peer0Org1
      - couchdb1


  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb:x86_64-1.0.0-beta
    ports:
      - 7984:5984

  peer0Org2:
    container_name: peer0Org2
    image: hyperledger/fabric-peer:x86_64-1.0.0-beta
    environment:
      # - GOPATH=/opt/gopath
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      - CORE_LOGGING_LEVEL=ERROR
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0Org2
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_ADDRESS=peer0Org2:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0Org2:7051
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=false
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/peerOrg2/peers/peer0.peerOrg2/msp/:/etc/hyperledger/crypto/peer
        # - ../chainwalker/go/src/github.com/pmechainwalk:/opt/gopath/src/github.com/pmechainwalk
    depends_on:
      - orderer.ordererOrg1
      - couchdb2

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb:x86_64-1.0.0-beta
    ports:
      - 8984:5984

  peer1Org2:
    container_name: peer1Org2
    image: hyperledger/fabric-peer:x86_64-1.0.0-beta
    environment:
      # - GOPATH=/opt/gopath
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      - CORE_LOGGING_LEVEL=ERROR
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1Org2
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_ADDRESS=peer1Org2:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1Org2:7051
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=false
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=artifacts_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 8056:7051
      - 8058:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/peerOrg2/peers/peer1.peerOrg2/msp/:/etc/hyperledger/crypto/peer
        # - ../chainwalker/go/src/github.com/pmechainwalk:/opt/gopath/src/github.com/pmechainwalk
    depends_on:
      - orderer.ordererOrg1
      - peer0Org2
      - couchdb3
